* Urgent
  - (!) Snippet fix
  - (!) Fix noice completion
  - ( ) Improve logs: plugin for AsciiColor, plugin for syntax coloring, autoreload, auto set type, only see differences
  - ( ) Multiline search but easier than weird live grep with args syntax.
  - ( ) Git fugitive open smaller height or floating window
  - (-) Tabline
  -- ( ) Fix time (tabrename with same name ?)
  -- ( ) Add notifications
* Somewhat important
  - ( ) Telescope undo for directory
  - ( ) Telescope open split with hjkl
  - ( ) Revert change to session
  - ( ) Import things from /srv/tools/../vim like colors for .iop colors
  - ( ) Use quickfix (cannot make it work because of bug #14638)
  -- ( ) Possibly make it automatic when calling waf with a fish wrapper or something (see "Plugins creation ideas")
  -- ( ) Fix in vim core that you need line position (so instead of a.c:12:2 you can have a.c:12)
  - ( ) See function graph (what function call what function)
  - ( ) Telescope smart-open should use local scope and cwd
  - ( ) Cool plugins smartcolumn (hide colorcolumn when not needed), tip.nvim, treesitter textsubjects (to select with TS based on context), align.nvim,  projections.nvim (project + sessions management), mason-bridge.nvim (register linters formatters in mason), mini.ai (extend create a/i textobjects), telescope rooter (use .git root when use telescope), nvim-numbertoggle (absolute number when not focus), nvim early retirement, term-edit,trailblazer, ccc, nvim-spider, tshjkl, improved ft, diffview, telescope git file history, flit, plugin/jumpfile.vim
  - ( ) Telescope equivalent of Trouble (see both LSP errors and todo list)
  - ( ) Pick a tab via name
  - ( ) Better quickfix with nvim-bqf
  - ( ) Improve refactoring plugin
  - ( ) Refactor all my mappings so they make more sense, remove useless etc.
  - ( ) https://dotfyle.com/plugins/nvim-focus/focus.nvim or equivalent to open in a direction (open if exists/create if doesn't)
  - ( ) send a breakpoint to runnin gdb (or other workaround)
  - ( ) Add Treesitter to end ( with ) etc. https://dotfyle.com/plugins/windwp/nvim-autopairs
  - ( ) Shortcut to focus on terminal and type "!!<cr>"
  - ( ) Fix terminal ctrl-h etc. already used (conflict with vim motions)
  - ( ) Generate programmatically in lua key mapping
  - ( ) Rename tab auto based on (pwd)
  - ( ) Plugin to find mnemonic for new keymap
  - ( ) Add warning if Settings git not synced
* Not urgent at all
  - ( ) Make gdb work with vim
  - ( ) Hide tab name (not buffer name) when only one tab
  - ( ) Gerrit (create plugin to see code review's comments with virtual text ? Prolly overkill) OR at least Gerrit CLI ?
  - ( ) Refactor everything to glorious Lua
  - ( ) Nvim-spectre
  - ( ) Hide prompt telescope theme cursor (for code action)

* 0.10 (May 7th)
  - ( ) Remove comment.vim
  - ( ) Enable dropbar (and remove ChadTree)
  - ( ) Osc52
  - ( ) Can use quickfix lists

* Lsp/formating
  - ( ) Fix wscript_build lsp errors
  - ( ) Fix define in libs when openeed neovim
  - ( ) Clang-format
  -- ( ) Detect single line comments (forbidden)
  -- ( ) || end of line if "if" multiple lines
  @code 
  if (test1 && test2 &&
  (test3 || test4 ||
  test5))
  {
  @end
  -- ( ) Detect struct when not necessary because typdef (https://github.com/llvm/llvm-project/issues/91063) (not clang-format according to someone)
  -- ( ) Fix "q_m(t) * e" (https://github.com/llvm/llvm-project/issues/91062)
  -- ( ) Newline after declarations (https://github.com/llvm/llvm-project/issues/91064)
  - ( ) Clangd
  -- ( ) Code action when declaration after definition to move defintion upward
  - ( ) Create LSP plugin that warn if not using t_ version
  - ( ) (fish, not vim) poetry in subfolder

* Plugins creation ideas/contributions
  - (!) !! plugin to show the diff between the code NOW and last moment where code compiled/tests passed
  - ( ) Problem: I WASTE SO MANY TIMES BECAUSE I THINK I MODIFY BINARY BUT IT DOESNT (!!) Solution: bind a file with a binary and warn if binary never changes. Solution2: automatically open terminal with program to compile SOLUTION3: use make program argument (which also use fixlist)
  - Plugin for Intersec logs. Syntax highlighting, diff with last log, folding.
  - Search for examples : give two strings and says maximum number of lines between two strings (function foo() then max 10 lines then bar()). Sort : by minimum number of lines in the function and in the file (first file with 100 lines then 1000 lines), most recent, proximity of folder with current folder. Ability so specify type of arguments (e.g: search all functions whose arguments are sb_t). Ability to search synonyms (e.g: delete also search remove etc.). Preference towards folder "test"/"examples"
  - Tabs as workspaces (don't close tabs when close windows see in mappings what I did)
  - See linux notifications/slack/teams ? (if not exist)
  - A plugin to take screenshots that doesnt require installing 1GB of dependencies
  - Make coq engine work with cmp (cmp used as a frontend)
  - Plugin to constantly reload quickfix list when typing command output (add a :0 if lacking in a.c:3)
  - Writing guidelines for how to write configs with advices and bits of config. What to use : Lazy, cmp vs coq etc. File structure.
  - Load all suggestions of code review in quickfix list
  - (maybe in core) check if keymap exists natively
  - (core) fix download spelling not work
  - Experiment: mark something in undo list with a mark so if experiment fail you can go back to that time
    when experiment is over
  - Good LSP graph call
  - Noisekun (noisli like) as plugin
  - Plugin to use Telescope to browse source of truths SO, Github code, Slack, Google, Docs, AI etc. Shortcut to open in browser, scratch buffer. Detect code blocks to paste them.
  - Update to the core to have a permission system so plugins can only have network  access if granted
  - Warn if options passed to lazy does not exist (setup instead of config etc.)
  - Make lazy detect automatically commands and keys
  - Show buffers local to scope only (already exist as a plugin)
  - Ctrl-i/Ctrl-o but inside same file
  - Github code search
  - struct abc {
    int a;
    };
    "va{" select everything between "{" => how to select everything including "struct abc"
