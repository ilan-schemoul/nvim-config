Prioritize very important (I actually really need it) and easy to do.

* Very important
  Also check {:/home/ilan/notes/technical_todo:} if at work

  - (!) OPTIMIZE FURTHER vim (urgent) StartProfile/EndProfile
  - ( ) Import things from /srv/tools/../vim fold and others
  - ( ) Multiline search but easier than weird live grep with args syntax. (shortcut to live-greps then plugin)
  - (-) Use block comments Comment.nvim for "o" (newline etc.) "a" (https://github.com/numToStr/Comment.nvim/issues/471)
  - ( ) Lua handle to see why slow much
  - ( ) Fix pylint
  - (-) Fix buffer terminal appearing as multiple lines (if a word/line is cut in half,
        a newline \(x) n is inserted but then I cannot search, select word etc.) https://github.com/neovim/neovim/issues/29503
  - ( ) Automate (with b ?) detection of forgot to waf configured, lib-common different etc.
  - ( ) Make telescope recency works related to current commit/branch ?
  - ( ) Cool plugins treesitter textsubjects (to select with TS based on context), align.nvim, projections.nvim (project + sessions management), telescope git file history
  - ( ) The "edit" when I leave lazygit is kinda buggy and seems to disable
        syntax highlighting for some reasons
  - ( ) When "abc" NO|PE "bcd" => select bcd not NOPE
  - ( ) Fix lazygit reload all buffers because it's horribly annoying
  - ( ) Start vim with negative nice if possible
* Somewhat important
  - ( ) J should merge lines in norg if not close to a | - -> etc.
  - ( ) Quickfix for waf
  - ( ) Tabline notifications
  - ( ) See function graph (what function call what function)
  - ( ) Add motion to select between regex /abc/
  - ( ) TS Textobject do not eat whitespace for internal only for external (e.g: caa)
* Not urgent at all
  - ( ) gx should open in regex101 when I underline regex
  - ( ) Fix folding (but is it useful IDK)
  - ( ) send a breakpoint to runnin gdb (or other workaround)
  - ( ) Plugin to find mnemonic for new keymap
  - ( ) Improve refactoring plugin
  - ( ) Hide tab name (not buffer name) when only one tab
  - ( ) Nvim-spectre

* Lsp/formating
  - ( ) Fix wscript_build lsp errors
  - ( ) Fix define in libs when openeed neovim
  - ( ) Clang-format
  -- ( ) Detect single line comments (forbidden)
  -- ( ) || end of line if "if" multiple lines
  @code
  if (test1 && test2 &&
  (test3 || test4 ||
  test5))
  {
  @end
  -- ( ) Detect struct when not necessary because typdef (https://github.com/llvm/llvm-project/issues/91063) (not clang-format according to someone)
  -- ( ) Fix "q_m(t) * e" (https://github.com/llvm/llvm-project/issues/91062)
  -- ( ) Newline after declarations (https://github.com/llvm/llvm-project/issues/91064)
  - ( ) Clangd
  -- ( ) Code action when declaration after definition to move defintion upward
  - ( ) Create LSP plugin that warn if not using t_ version
  - ( ) (fish, not vim) poetry in subfolder

* Plugins creation ideas/contributions
  - (!) !! plugin to show the diff between the code NOW and last moment where code compiled/tests passed
  - Search for examples : give two strings and says maximum number of lines between two strings (function foo() then max 10 lines then bar()). Sort : by minimum number of lines in the function and in the file (first file with 100 lines then 1000 lines), most recent, proximity of folder with current folder. Ability so specify type of arguments (e.g: search all functions whose arguments are sb_t). Ability to search synonyms (e.g: delete also search remove etc.). Preference towards folder "test"/"examples"
  - See linux notifications/slack/teams ? (if not exist)
  - Plugin to constantly reload quickfix list when typing command output
  - Writing guidelines for how to write configs with advices and bits of config. What to use : Lazy, cmp vs coq etc. File structure.
  - (maybe in core) check if keymap exists natively
  - (core) fix download spelling not work
  - Experiment: mark something in undo list with a mark so if experiment fail you can go back to that time
    when experiment is over
  - Good LSP graph call
  - Plugin to use Telescope to browse source of truths SO, Github code, Slack, Google, Docs, AI etc. Shortcut to open in browser, scratch buffer. Detect code blocks to paste them.
  - Update to the core to have a permission system so plugins can only have network access if granted
  - Warn if options passed to lazy does not exist (setup instead of config etc.)
  - Make lazy detect automatically commands and keys
  - Ctrl-i/Ctrl-o but inside same file
  - Github code search
  - struct abc {
    int a;
    };
    "va{" select everything between "{" => how to select everything including "struct abc"
